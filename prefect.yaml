# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: prefect-pack

# applies to all deployments
pull:
  - prefect.deployments.steps.git_clone: &git_clone
      repository: https://github.com/zzstoatzz/prefect-pack.git

# the deployments section allows you to provide configuration for deploying flows
deployments:
  - name: print-info
    tags:
      - sanity-check
    description: a sanity check flow that prints some information
    entrypoint: flows/hello.py:print_info
    parameters: {}
    work_pool:
      name: docker-work
      job_variables:
        image: "{{ build-image.image }}"
    version:
    enforce_parameter_schema: true
    schedules: []

    build:
      - prefect_docker.deployments.steps.build_docker_image:
          id: build-image
          image_name: zzstoatzz/prefect-pack
          dockerfile: Dockerfile.demo

    # push section allows you to push docker images to a registry
    # also automatically cached for duration of `prefect deploy`
    push:
      - prefect_docker.deployments.steps.push_docker_image:
          # downstream steps can use the result of the upstream step (e.g. build-image)
          image_name: zzstoatzz/prefect-pack
          tag: "{{ build-image.tag }}"

      # here's our own custom step that emits a deployment request event
      # that accepts arbitrary **kwargs to stuff in the event payload
      # see `src/prefect_pack/steps/events.py:emit_environment_description`
      - prefect_pack.steps.events.emit_environment_description:
          current_user: "{{ $USER }}"
          docker_info:
            image: "{{ build-image.image }}"
            tag: "{{ build-image.tag }}"

  - name: print-info-local
    description: a sanity check flow that prints some information
    entrypoint: flows/hello.py:print_info
    parameters: {}
    work_pool:
      name: local
      job_variables:
        env:
          SOME_JOB_VARIABLE: "we did"

  - name: network-speed
    description: a sanity check flow that prints some information
    entrypoint: flows/network_speedtest/main.py:monitor_network
    parameters: {}
    work_pool:
      name: local # this is a process work pool

    pull:
      - prefect.deployments.steps.git_clone:
          repository: https://github.com/zzstoatzz/prefect-pack.git
      - prefect.deployments.steps.run_shell_script:
          script: |
            uv pip install -r prefect-pack/flows/network_speedtest/requirements.txt

  - name: network-speed-on-k8s
    description: a sanity check flow that prints some information
    entrypoint: flows/network_speedtest/main.py:monitor_network
    parameters: {}
    work_pool:
      name: dev-k8s
      job_variables:
        image: "{{ build-image.image }}"
        command: "uv run -m prefect.engine"
        env:
          EXTRA_PIP_PACKAGES: "prefect-dbt --prerelease allow"
    build:
      - prefect_docker.deployments.steps.build_docker_image:
          id: build-image
          image_name: zzstoatzz/prefect-pack
          tag: network-speed-on-k8s
          dockerfile: Dockerfile.speedtest
    push:
      - prefect_docker.deployments.steps.push_docker_image:
          image_name: "{{ build-image.image }}"
          tag: "{{ build-image.tag }}"

  - name: uses-k8s-secret
    description: a sanity check flow that prints some information
    entrypoint: flows/uses_k8s_secret.py:main
    parameters: {}
    work_pool:
      name: k8s
      job_variables:
        image: prefecthq/prefect:3-python3.12
        env:
          - name: OPENAI_API_KEY
            valueFrom:
              secretKeyRef:
                name: openai-api-key
                key: key

    pull:
      - prefect.deployments.steps.git_clone:
          repository: https://github.com/zzstoatzz/prefect-pack.git
      - prefect.deployments.steps.run_shell_script:
          script: pip install marvin


  - name: uses-managed-work-pool
    description: a sanity check flow that prints some information
    entrypoint: examples/run_flows_on_managed_pool/workflow.py:load_titanic_dataset
    parameters: {}
    work_pool:
      name: managed
      job_variables:
        pip_packages:
          - pandas

  - name: uses-polars
    description: a sanity check flow that prints some information
    entrypoint: flows/use_polars/main.py:main
    parameters: {}
    work_pool:
      name: local
    pull:
      - prefect.deployments.steps.git_clone:
          id: git-clone
          repository: https://github.com/zzstoatzz/prefect-pack.git
      - prefect.deployments.steps.run_shell_script:
          script: |
            uv venv this-run --python 3.12
            bash -c "source this-run/bin/activate"
            uv sync --project {{ git-clone.directory }}/flows/use_polars
            echo $VIRTUAL_ENV

          expand_env_vars: true

  - name: uses-pandas
    description: a sanity check flow that prints some information
    entrypoint: flows/use_pandas/main.py:main
    parameters: {}
    work_pool:
      name: local
    pull:
      - prefect.deployments.steps.git_clone:
          id: git-clone
          repository: https://github.com/zzstoatzz/prefect-pack.git
      - prefect.deployments.steps.run_shell_script:
          script: |
            uv venv this-run --python 3.12
            bash -c "source this-run/bin/activate"
            uv sync --project {{ git-clone.directory }}/flows/use_pandas
            echo $VIRTUAL_ENV

          expand_env_vars: true